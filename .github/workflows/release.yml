name: Create Release on Push

on:
  push:
    branches:
      - main # 监听 main 分支

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来创建/更新 Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # 1. 获取提交信息并写入输出变量
      - name: 提取最新提交信息
        id: extract_commit_message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 2. 检查是否包含 "Release vX.Y.Z" 字样
      - name: 检查是否包含 Release
        id: check_release
        run: |
          if echo "${{ steps.extract_commit_message.outputs.COMMIT_MESSAGE }}" | grep -Eq 'Release v[0-9]+\.[0-9]+\.[0-9]+'; then
            echo "IS_RELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_RELEASE=false" >> $GITHUB_OUTPUT
          fi

      # 3. 提取版本号（仅当 IS_RELEASE == true 时才执行）
      - name: 提取版本号
        id: extract_version
        if: ${{ steps.check_release.outputs.IS_RELEASE == 'true' }}
        run: |
          VERSION=$(echo "${{ steps.extract_commit_message.outputs.COMMIT_MESSAGE }}" \
                    | grep -oE 'Release v[0-9]+\.[0-9]+\.[0-9]+' \
                    | awk -F 'v' '{print $2}')
          if [[ -z "$VERSION" ]]; then
            echo "::error::无法从提交信息中提取版本号。请确保提交信息含有类似 'Release vX.Y.Z' 的标记。"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: 设置版本环境变量
        if: ${{ steps.check_release.outputs.IS_RELEASE == 'true' }}
        run: echo "RELEASE_VERSION=${{ steps.extract_version.outputs.VERSION }}" >> $GITHUB_ENV

      # 4. 打包仓库（仅当 IS_RELEASE == true 时才执行）
      - name: 打包仓库
        if: ${{ steps.check_release.outputs.IS_RELEASE == 'true' }}
        run: |
          PROJECT_NAME=$(basename "$GITHUB_REPOSITORY")
          zip -r "${PROJECT_NAME}-v${RELEASE_VERSION}.zip" . -x "*.git*" "__pycache__*" "*.github*" ".github*"

      # 5. 创建并上传 Release（仅当 IS_RELEASE == true 时才执行）
      - name: 创建并上传 Release
        if: ${{ steps.check_release.outputs.IS_RELEASE == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.extract_version.outputs.VERSION }}"
          name: "Release v${{ steps.extract_version.outputs.VERSION }}"
          body: |
            **This submission includes:**
            ${{ steps.extract_commit_message.outputs.COMMIT_MESSAGE }}
          files: "${{ github.event.repository.name }}-v${{ steps.extract_version.outputs.VERSION }}.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
